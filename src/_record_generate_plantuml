#!/bin/bash
set -e
eval "$($(dirname $0)/record-config)"

# Handle record type
record_type=$(echo ${1:-adr} | tr '[:upper:]' '[:lower:]')
shift

## usage: record generate plantuml [-p LINK_PREFIX] [-e LINK-EXTENSION] RECORD_TYPE
##
## Generates a visualisation of the links between decision records in
## Plantuml format.  This can be piped into the plantuml tools to
## generate a an image file.
##
## Each node in the graph represents a decision record and is linked to
## the decision record document.
##
## Options:
##
## -e LINK-EXTENSION
##         the file extension of the documents to which generated links refer.
##         Defaults to `.html`.
##
## -p LINK_PREFIX
##         prefix each decision file link with LINK_PREFIX.
##
## E.g. to generate a graph visualisation of decision records in SVG format:
##
##     record-adr generate graph | dot -Tsvg > graph.svg
##
## E.g. to generate a graph visualisation in PDF format, in which all links
## are to .pdf files:
##
##    record-adr generate graph -e .pdf | dot -Tpdf > graph.pdf

link_prefix=
link_extension=.html

file_type=$("$record_bin_dir/_record_get_conf" "${record_type}" ".record-file-type")

while getopts e:p: arg; do
    case "$arg" in
    e)
        link_extension="$OPTARG"
        ;;
    p)
        link_prefix="$OPTARG"
        ;;
    *)
        echo "Not implemented: $arg" >&2
        exit 1
        ;;
    esac
done
shift $((OPTIND - 1))

function index() {
    basename "$1" | sed -e 's/-.*//' | sed -e 's/^0*//'
}

cat << EOF
[plantuml]
----
@startdot
digraph ${record_type} {
    node [shape=plaintext];

    subgraph {
EOF

for f in $("$record_bin_dir/record-list" "${record_type}"); do
    n=$(index "$f")
    title=$("$record_bin_dir/_record_title" "${record_type}" ${f})

    echo "        _$n [label=\"$title\"; URL=\"${link_prefix}$(basename $f ".$file_type")${link_extension}\"];"
    if [ $n -gt 1 ]; then
        echo "        _$(($n - 1)) -> _$n [style=\"dotted\", weight=1];"
    fi
done
echo "    }"

for f in $("$record_bin_dir/record-list" "${record_type}"); do
    n=$(index "$f")
    "$record_bin_dir/_record_links" "${record_type}" "$f" | grep -Ev " by$" | sed -E -e 's/^([0-9]+)=(.+)$/  _'"$n"' -> _\1 [label="\2", weight=0]/;'
done

cat << EOF
}
@enddot
----
EOF
