#!/bin/bash
set -e
eval "$("$(dirname "$0")"/record-config)"

# Handle record type
record_type=$(echo ${1:-adr} | tr '[:upper:]' '[:lower:]')
record_type_up=$(echo $record_type | tr '[:lower:]' '[:upper:]')
shift

source "$(dirname $0)/_record_database"

file_type=$("$record_bin_dir/_record_get_conf" "${record_type}" ".record-file-type")

## usage: adr generate index
##
## Generates an index and a table of contents in asciidoc

function listByFieldWhereX() {
    if [ "adoc" = "${file_type}" ]; then
        cat <<EOF
== $1

[cols="3,1,1,1,1", options="header"]
|===
|Name|Proposed Date|Decision Date|Status|Priority
$(selectFromDatabase "SELECT '|<<' || title || '>>', proposed, decision, status, prio_or_sever || char(13) FROM records WHERE ${2} AND record_type = '${record_type}' ORDER BY id")
|===

EOF
    else
        cat <<EOF
## $1

|Name|Proposed Date|Decision Date|Status|Priority
$(selectFromDatabase "SELECT '|<<' || title || '>>', proposed, decision, status, prio_or_sever || char(13) FROM records WHERE ${2} AND record_type = '${record_type}' ORDER BY id")
|===

EOF
    fi
}

function includeAllRecords() {
    if [ "adoc" = "${file_type}" ]; then
        cat <<EOF
== Full record List

$(selectFromDatabase "SELECT 'include::decisions/' || link || '[leveloffset=2]' || char(13) || char(13) FROM records WHERE record_type = '${record_type}' ORDER BY id")

EOF
    fi
}

#################
# Actual output #
#################

cat <<EOF
//////////////////////////////////////////////////////////////
/                                                            /
/ Do not change this file - all changes will be overwritten! /
/                                                            /
//////////////////////////////////////////////////////////////
EOF

# List by SLA
listByFieldWhereX "List of all ${record_type_up} due in 14 day" "status = 'proposed' and date('now') < date(proposed, '+14 day')"

# List by status
listByFieldWhereX "List of all drafted ${record_type_up}" "status = 'drafted'"

listByFieldWhereX "List of all proposed ${record_type_up}" "status = 'proposed'"

listByFieldWhereX "List of all accepted ${record_type_up}" "status = 'accepted'"

listByFieldWhereX "List of all superseded ${record_type_up}" "status = 'superseded'"

listByFieldWhereX "List of all rejected ${record_type_up}" "status = 'rejected'"

# List by priority
listByFieldWhereX "List of all ${record_type_up} with low priority" "prio_or_sever = 'low'"

listByFieldWhereX "List of all ${record_type_up} with medium priority" "prio_or_sever = 'medium'"

listByFieldWhereX "List of all ${record_type_up} with high priority" "prio_or_sever = 'high'"

# All
listByFieldWhereX "List of all ${record_type_up}" "status = status"

includeAllRecords

# Use last-update-label of generated index
cat <<EOF
Last update: $(date -u +'%Y-%m-%d %H:%M')
EOF
