#!/bin/bash
set -e
eval "$($(dirname $0)/record-config)"

# Handle record type
record_type=$(echo ${1:-adr} | tr '[:upper:]' '[:lower:]')
shift

## usage: record init [-t FILETYPE] [DIRECTORY]
##
## Initialises the directories of the records records:
##
##  * creates both subdirectory of the current working directory
##  * creates the first records in that subdirectory, recording the decision to
##    record decisions with these tools.
##
## If the DIRECTORY is not given, the records are stored in the directory `doc/architecture-decision-records` resp
## `doc/technical-debts-records`.
##
## Options:
##
## -t FILE_TYPE
##                 Uses the specified file type.
##                 FILE_TYPE is adoc (for Asciidoc, default) or md (Markdown).
file_type='adoc'

while getopts t: arg; do
    case "$arg" in
    t)
        if [ "$OPTARG" != "md" ] && [ "$OPTARG" != "adoc" ]; then
            echo "Unsupported file type: $OPTARG" >&2
            exit 1
        fi
        file_type="$OPTARG"
        ;;
    --)
        break
        ;;
    *)
        echo "Not implemented: $arg" >&2
        exit 1
        ;;
    esac
done
shift $((OPTIND - 1))

cur_dir=${1-.}
record_adr_dir=$("$record_bin_dir/_record_get_conf" adr ".record-default-dir")
record_tdr_dir=$("$record_bin_dir/_record_get_conf" tdr ".record-default-dir")

# Setup paths and dotfiles
mkdir -p "${cur_dir}/${record_adr_dir}" "${cur_dir}/${record_tdr_dir}"
echo "$(realpath "${cur_dir}/${record_adr_dir}")" > "${cur_dir}/.record-adr-dir"
echo "$(realpath "${cur_dir}/${record_tdr_dir}")" > "${cur_dir}/.record-tdr-dir"
echo "$file_type" > "${cur_dir}/.record-file-type"

# Create init records
VISUAL=true RECORD_TEMPLATE="$record_template_dir/adr-init.$file_type" \
    "$record_bin_dir/record-adr" new architecture-decisions-record

VISUAL=true RECORD_TEMPLATE="$record_template_dir/tdr-init.$file_type" \
    "$record_bin_dir/record-tdr" new technical-debts-record
